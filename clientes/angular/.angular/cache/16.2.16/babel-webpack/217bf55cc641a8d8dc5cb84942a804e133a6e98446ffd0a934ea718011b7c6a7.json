{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost/phpulse/index.php'; // URL base de la API\n  }\n  // Método genérico para obtener datos (GET)\n  getData(action) {\n    const url = `${this.apiUrl}?action=${action}`; // URL dinámica basada en la acción\n    return this.http.get(url); // Hacer la solicitud GET\n  }\n  // Método genérico para enviar datos (POST)\n  postData(action, data) {\n    const url = `${this.apiUrl}?action=${action}`; // URL dinámica basada en la acción\n    return this.http.post(url, data); // Hacer la solicitud POST\n  }\n  // Método genérico para actualizar datos (PUT)\n  putData(action, data) {\n    const url = `${this.apiUrl}?action=${action}`; // URL dinámica basada en la acción\n    return this.http.put(url, data); // Hacer la solicitud PUT\n  }\n  // Método genérico para eliminar datos (DELETE)\n  deleteData(action, id) {\n    const url = `${this.apiUrl}?action=${action}&id=${id}`; // URL dinámica con el id\n    return this.http.delete(url); // Hacer la solicitud DELETE\n  }\n\n  static {\n    this.ɵfac = function DataService_Factory(t) {\n      return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DataService,\n      factory: DataService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["DataService","constructor","http","apiUrl","getData","action","url","get","postData","data","post","putData","put","deleteData","id","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\DAW2\\Documents\\angular\\servicios\\src\\app\\data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private apiUrl = 'http://localhost/phpulse/index.php';  // URL base de la API\n\n  constructor(private http: HttpClient) { }\n\n  // Método genérico para obtener datos (GET)\n  getData(action: string): Observable<any> {\n    const url = `${this.apiUrl}?action=${action}`;  // URL dinámica basada en la acción\n    return this.http.get<any>(url);  // Hacer la solicitud GET\n  }\n\n  // Método genérico para enviar datos (POST)\n  postData(action: string, data: any): Observable<any> {\n    const url = `${this.apiUrl}?action=${action}`;  // URL dinámica basada en la acción\n    return this.http.post<any>(url, data);  // Hacer la solicitud POST\n  }\n\n  // Método genérico para actualizar datos (PUT)\n  putData(action: string, data: any): Observable<any> {\n    const url = `${this.apiUrl}?action=${action}`;  // URL dinámica basada en la acción\n    return this.http.put<any>(url, data);  // Hacer la solicitud PUT\n  }\n\n  // Método genérico para eliminar datos (DELETE)\n  deleteData(action: string, id: number): Observable<any> {\n    const url = `${this.apiUrl}?action=${action}&id=${id}`;  // URL dinámica con el id\n    return this.http.delete<any>(url);  // Hacer la solicitud DELETE\n  }\n}"],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,oCAAoC,CAAC,CAAE;EAEhB;EAExC;EACAC,OAAOA,CAACC,MAAc;IACpB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACH,MAAM,WAAWE,MAAM,EAAE,CAAC,CAAE;IAChD,OAAO,IAAI,CAACH,IAAI,CAACK,GAAG,CAAMD,GAAG,CAAC,CAAC,CAAE;EACnC;EAEA;EACAE,QAAQA,CAACH,MAAc,EAAEI,IAAS;IAChC,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACH,MAAM,WAAWE,MAAM,EAAE,CAAC,CAAE;IAChD,OAAO,IAAI,CAACH,IAAI,CAACQ,IAAI,CAAMJ,GAAG,EAAEG,IAAI,CAAC,CAAC,CAAE;EAC1C;EAEA;EACAE,OAAOA,CAACN,MAAc,EAAEI,IAAS;IAC/B,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACH,MAAM,WAAWE,MAAM,EAAE,CAAC,CAAE;IAChD,OAAO,IAAI,CAACH,IAAI,CAACU,GAAG,CAAMN,GAAG,EAAEG,IAAI,CAAC,CAAC,CAAE;EACzC;EAEA;EACAI,UAAUA,CAACR,MAAc,EAAES,EAAU;IACnC,MAAMR,GAAG,GAAG,GAAG,IAAI,CAACH,MAAM,WAAWE,MAAM,OAAOS,EAAE,EAAE,CAAC,CAAE;IACzD,OAAO,IAAI,CAACZ,IAAI,CAACa,MAAM,CAAMT,GAAG,CAAC,CAAC,CAAE;EACtC;;;;uBA5BWN,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXnB,WAAW;MAAAoB,OAAA,EAAXpB,WAAW,CAAAqB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}