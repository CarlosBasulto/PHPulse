{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./data.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction AppComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Cargando...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Datos obtenidos:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"pre\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"json\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 1, ctx_r1.data));\n  }\n}\nexport class AppComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.title = 'servicios';\n    this.data = null; // Variable para almacenar los datos\n    this.loading = true; // Indicador de carga\n  }\n\n  ngOnInit() {\n    this.loadData(); // Cargar los datos cuando el componente se inicializa\n  }\n  // Método para cargar los datos\n  loadData() {\n    this.dataService.getData().subscribe({\n      next: response => {\n        this.data = response; // Asignar la respuesta a la variable 'data'\n        this.loading = false; // Detener el indicador de carga\n      },\n\n      error: err => {\n        console.error('Error al cargar los datos', err);\n        this.loading = false; // Detener el indicador de carga en caso de error\n      }\n    });\n  }\n\n  static {\n    this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 4,\n      vars: 2,\n      consts: [[4, \"ngIf\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, AppComponent_div_0_Template, 2, 0, \"div\", 0);\n          i0.ɵɵtemplate(1, AppComponent_div_1_Template, 6, 3, \"div\", 0);\n          i0.ɵɵelement(2, \"router-outlet\")(3, \"router-outlet\");\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n        }\n      },\n      dependencies: [i2.NgIf, i3.RouterOutlet, i2.JsonPipe],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ctx_r1","data","AppComponent","constructor","dataService","title","loading","ngOnInit","loadData","getData","subscribe","next","response","error","err","console","ɵɵdirectiveInject","i1","DataService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtemplate","AppComponent_div_0_Template","AppComponent_div_1_Template","ɵɵelement","ɵɵproperty"],"sources":["C:\\Users\\DAW2\\Documents\\angular\\servicios\\src\\app\\app.component.ts","C:\\Users\\DAW2\\Documents\\angular\\servicios\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DataService } from './data.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'servicios';\n\n  data: any =null;  // Variable para almacenar los datos\n  loading: boolean = true;  // Indicador de carga\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n    this.loadData();  // Cargar los datos cuando el componente se inicializa\n  }\n\n  // Método para cargar los datos\n  loadData() {\n    this.dataService.getData().subscribe({\n      next: (response) => {\n        this.data = response;  // Asignar la respuesta a la variable 'data'\n        this.loading = false;   // Detener el indicador de carga\n      },\n      error: (err) => {\n        console.error('Error al cargar los datos', err);\n        this.loading = false;  // Detener el indicador de carga en caso de error\n      }\n    });\n  }\n}","\n<div *ngIf=\"loading\">Cargando...</div>\n<div *ngIf=\"!loading\">\n  <h2>Datos obtenidos:</h2>\n  <pre>{{ data | json }}</pre>\n</div>\n\n<router-outlet></router-outlet>\n\n<router-outlet></router-outlet>\n"],"mappings":";;;;;;ICCAA,EAAA,CAAAC,cAAA,UAAqB;IAAAD,EAAA,CAAAE,MAAA,kBAAW;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;IACtCH,EAAA,CAAAC,cAAA,UAAsB;IAChBD,EAAA,CAAAE,MAAA,uBAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACzBH,EAAA,CAAAC,cAAA,UAAK;IAAAD,EAAA,CAAAE,MAAA,GAAiB;;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IAAvBH,EAAA,CAAAI,SAAA,GAAiB;IAAjBJ,EAAA,CAAAK,iBAAA,CAAAL,EAAA,CAAAM,WAAA,OAAAC,MAAA,CAAAC,IAAA,EAAiB;;;ADGxB,OAAM,MAAOC,YAAY;EAMvBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAL/B,KAAAC,KAAK,GAAG,WAAW;IAEnB,KAAAJ,IAAI,GAAO,IAAI,CAAC,CAAE;IAClB,KAAAK,OAAO,GAAY,IAAI,CAAC,CAAE;EAEsB;;EAEhDC,QAAQA,CAAA;IACN,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAE;EACpB;EAEA;EACAA,QAAQA,CAAA;IACN,IAAI,CAACJ,WAAW,CAACK,OAAO,EAAE,CAACC,SAAS,CAAC;MACnCC,IAAI,EAAGC,QAAQ,IAAI;QACjB,IAAI,CAACX,IAAI,GAAGW,QAAQ,CAAC,CAAE;QACvB,IAAI,CAACN,OAAO,GAAG,KAAK,CAAC,CAAG;MAC1B,CAAC;;MACDO,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACF,KAAK,CAAC,2BAA2B,EAAEC,GAAG,CAAC;QAC/C,IAAI,CAACR,OAAO,GAAG,KAAK,CAAC,CAAE;MACzB;KACD,CAAC;EACJ;;;;uBAxBWJ,YAAY,EAAAT,EAAA,CAAAuB,iBAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAZhB,YAAY;MAAAiB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCNzBhC,EAAA,CAAAkC,UAAA,IAAAC,2BAAA,iBAAsC;UACtCnC,EAAA,CAAAkC,UAAA,IAAAE,2BAAA,iBAGM;UAENpC,EAAA,CAAAqC,SAAA,oBAA+B;;;UANzBrC,EAAA,CAAAsC,UAAA,SAAAL,GAAA,CAAApB,OAAA,CAAa;UACbb,EAAA,CAAAI,SAAA,GAAc;UAAdJ,EAAA,CAAAsC,UAAA,UAAAL,GAAA,CAAApB,OAAA,CAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}